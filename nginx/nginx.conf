
map $http_accept $file_suffix {
    default   "";

    "application/rdf+xml"       ".rdf";
    "application/n-triples"     ".nt";
    "application/trix"          ".xml";
    "application/trig "         ".trig";
    "application/x-binary"      ".brf";
    "application/n-quads"       ".nq";
    "application/ld+json"       ".jsonld";
    "application/rdf+json"      ".rj";
    "application/xhtml+xml"     ".xhtml";
    "application/zip"           ".zip";

    "text/html"                 ".html";
    "text/turtle"               ".ttl";
    "text/n3"                   ".n3";
}
server {
    root /www/data;

    types {
        application/rdf+xml rdf;
        application/n-triples nt;
        application/trix xml;
        application/trig  trig;
        application/x-binary brf;
        application/n-quads nq;
        application/ld+json jsonld;
        application/rdf+json rj;
        application/xhtml+xml xhtml;
        application/zip zip;

        text/html html;
        text/turtle ttl;
        text/n3 n3;
    }

    # Convert id strings (e.g. /21431.format) to `/<md5(id)>/id.format`
    location ~ "^/(?<id>[0-9]+)(\.[a-z0-9]+)?$"  {
        set_md5 $digest $id;
        rewrite .* /$digest$request_uri;
    }

    # Split the md5 path into 8 four-char subpaths followed by the document id (e.g. `/ab00/0000/0000/0000/0000/0000/0000/0000/21431.format`) in a very cumbersome way
    location ~ "^/(?<x1>[0-9a-f]{4})(?<x3>[0-9a-f]{4})(?<x5>[0-9a-f]{4})(?<x7>[0-9a-f]{4})(?<x9>[0-9a-f]{4})(?<x11>[0-9a-f]{4})(?<x13>[0-9a-f]{4})(?<x15>[0-9a-f]{4})/(?<id>[0-9]*)(?<ext>\.[a-z0-9]+)?$" {
        add_header Vary Accept;

        rewrite .* /id/$x1/$x3/$x5/$x7/$x9/$x11/$x13/$x15/latest/$id$ext break;
        try_files $uri$file_suffix $uri$ext $uri $uri.jsonld =404;
    }

    location / {
        index index.html;
    }
}
